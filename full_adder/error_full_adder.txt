c Comparing two implementations of a full adder
c Zephaniah Hill
c Univeristy of Michigan 6/9/20

c Using higher level logic gates.
c x1 = 1, x2 = 2, x3 = 3, G1 = 12, G2 = 13, G3 = 14, G4 = 15, G5 = 16, G6 = 17, G7 = 18, G8 = 19
c N = 9, M = 10, equiv = 11 = E
c a = 1, b = 2, c = 3, Q = 4, R = 5, P = 6, S = 7, C_out = 8 = K
p cnf 19 59
c q = a xor b --> (~q+~a+~b)(~q+a+b)(q+~a+b)(q+a+~b)
-1 -2 -4 0
1 2 -4 0
1 -2 4 0
-1 2 4 0

c r = a*b --> (~a+~b+r)(~r+b)(~r+a)
-1 -2 5 0
2 -5 0
1 -5 0

c p = c * q --> (p + ~c ~q)(~p+q)(~p+c)
-3 -4 6 0
4 -6 0
3 -6 0

c s = q xor c --> (~s+~q~c)(~s+c+q)(s+~q+c)(s+q+~c)
-3 -4 -7 0
3 4 -7 0
3 -4 7 0
-3 4 7 0

c c_out = k = p+r --> (~k+p+r)(k+~p)(k+~r)
5 6 -8 0
-6 8 0
-5 8 0

c -------------------------------end-----------------------------------

c Using only Nand gates.
c x1 = 1, x2 = 2, x3 = 3, G1 = 12, G2 = 13, G3 = 14, G4 = 15, G5 = 16, G6 = 17, G7 = 18, G8 = 19

c g1 = ~(x1*x2) --> (~g1+~x1+~x2)(g1+x1)(g1+x2)
-1 -2 -12 0
1 12 0
2 12 0

c g2 = ~(x1*x3*g1) --> (~g2+~x1+~x3+~g1)(g2+x1)(g2+x3)(g2+g1)
-1 -3 -12 -13 0
1 13 0
3 13 0
12 13 0

c g3 = ~(x2*x3*g1) --> (~g3+~x2+~x3+~g1)(g2+x2)(g2+x3)(g2+g1)
-2 -3 -12 -14 0
2 14 0
3 14 0
12 14 0

c g4 = ~(x1*g1*g2) --> (~g4+~x1+~g1+~g2)(g4+x1)(g4+g1)(g4+g2)
-1 -12 -13 -15 0
1 15 0
12 15 0
13 15 0

c g5 = ~(x3*g3*g2) --> (~g5+~x3+~g3+~g2)(g5+x3)(g5+g3)(g5+g2)
-3 -13 -14 -16 0
3 16 0
14 16 0
13 16 0

c g6 = ~(x2*g1*g3) --> (~g6+~x2+~g1+~g3)(g6+x2)(g6+g1)(g6+g3)
-2 -12 -14 -17 0
2 17 0
12 17 0
14 17 0

c g7 = ~(g1*g2*g3) --> (~g6+~g2~g1*~g3)(g7+g2)(g7+g1)(g7+g3)
-12 -13 -14 -18 0
12 18 0
13 18 0
14 18 0

c g8 = ~(g4*g5*g6) --> (~g8+~g4~g5*~g6)(g8+g4)(g8+g5)(g8+g6)
-15 -16 -17 -19 0
15 19 0
16 19 0
17 19 0

c -------------------------------end-----------------------------------
c mitre --> equiv = (G7 xor c_out)+(G8 xor S)
c x1 = 1, x2 = 2, x3 = 3, G1 = 12, G2 = 13, G3 = 14, G4 = 15, G5 = 16, G6 = 17, G7 = 18, G8 = 19
c N = 9, M = 10, equiv = 11 = E
c a = 1, b = 2, c = 3, Q = 4, R = 5, P = 6, S = 7, C_out = 8 = K

c n = G7 xor c_out --> (~n+~g7+~k)(~n+g7+k)(n+~g7+k)(n+g7+~k)
-8 -18 -9 0
8 18 -9 0
8 -18 9 0
-8 18 9 0

c m = G8 xor S --> (~m+~g8+~s)(~m+g8+s)(m+~g8+s)(m+g8+~s)
-7 -19 10 0
7 19 -10 0
7 -19 10 0
-7 19 10 0

c equiv = e = m+n --> (~e+m+n)(e+~n)(e+~m)
9 10 -11 0
-10 11 0
-9 11 0

11 0
